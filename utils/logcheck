#!/bin/bash

############################################################
# Command line tool to check log files for common error flags
# September, 2020, gwct
############################################################

display_usage() {
# Usage message for -h
    echo
    echo " Usage:"
    echo
    echo "     logcheck -e <extension> -w"
    echo
    echo " Options:"
    echo "     -e: The extension of log files in the directory. Default: log"
    echo "     -p: The prefix for files to search."
    echo "     -w: Set to exclude warning flags."
    echo "     -h: Display this help message."
    echo
    exit 0
}

##########
# Invalid input option message
invalid_opt() {
    echo "    Error 1: Invalid option: -$1"
    echo
    exit 1
}

############################################################

ext="log"
prefix=""
warn=true
# Defaults

while getopts ":e:p:wh" arg; do
    case $arg in
        h) display_usage;;
        e) ext=$OPTARG;;
        p) prefix=$OPTARG;;
        w) warn=false;;
        \?) invalid_opt $OPTARG ;;
    esac
done
# Parse input options

echo
echo " logcheck -- Checking: $prefix logfiles with extension .$ext"
echo

grep Error $prefix*.$ext
grep ERROR $prefix*.$ext
grep error $prefix*.$ext
grep Exception $prefix*.$ext
grep AssertionError $prefix*.$ext
grep "java.lang.RuntimeException:" $prefix*.$ext
grep "java.lang.AssertionError:" $prefix*.$ext
grep "Can't read file" $prefix*.$ext
if [ "$warn" = true ] ; then
    grep Warning $prefix*.$ext
    grep WARNING $prefix*.$ext
    grep warning $prefix*.$ext
fi

echo